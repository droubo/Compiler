Terminals unused in grammar

   UMINUS


State 19 conflicts: 1 shift/reduce
State 118 conflicts: 13 shift/reduce
State 144 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: %empty
    3      | stmt stmts

    4 stmt: expr SEMICOLON
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | BREAK SEMICOLON
   10     | CONTINUE SEMICOLON
   11     | block
   12     | funcdef
   13     | SEMICOLON

   14 expr: assignexpr
   15     | expr op expr
   16     | term

   17 op: PLUS
   18   | MINUS
   19   | MULT
   20   | DIV
   21   | MOD
   22   | GREATER
   23   | GREATER_EQUAL
   24   | LESS
   25   | LESS_EQUAL
   26   | EQUAL
   27   | NOT_EQUAL
   28   | AND
   29   | OR

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   31     | MINUS expr
   32     | NOT expr
   33     | PLUS_PLUS lvalue
   34     | lvalue PLUS_PLUS
   35     | MINUS_MINUS lvalue
   36     | lvalue MINUS_MINUS
   37     | primary

   38 assignexpr: lvalue ASSIGN expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   43        | const

   44 lvalue: ID
   45       | LOCAL ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue DOT ID
   49       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   50       | call DOT ID
   51       | call LEFT_BRACKET expr RIGHT_BRACKET

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   53     | lvalue callsuffix
   54     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 elist: expr comaexpr

   60 comaexpr: %empty
   61         | COMA expr comaexpr

   62 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   63          | LEFT_BRACKET indexed RIGHT_BRACKET
   64          | LEFT_BRACKET RIGHT_BRACKET

   65 indexed: indexedelem comaindexedelem

   66 comaindexedelem: %empty
   67                | COMA indexedelem comaindexedelem

   68 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   69 block: LEFT_BRACE stmts RIGHT_BRACE
   70      | LEFT_BRACE RIGHT_BRACE

   71 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   72        | FUNCTION LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

   73 const: REALCONST
   74      | INTCONST
   75      | STRING
   76      | NIL
   77      | TRUE
   78      | FALSE

   79 idlist: %empty
   80       | ID comaid

   81 comaid: COMA ID comaid
   82       | %empty

   83 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt
   84       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   85 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   87 returnstmt: RETURN expr SEMICOLON
   88           | RETURN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 83 84
ELSE (259) 83
WHILE (260) 85
FOR (261) 86
FUNCTION (262) 71 72
RETURN (263) 87 88
BREAK (264) 9
CONTINUE (265) 10
AND (266) 28
OR (267) 29
NOT (268) 32
LOCAL (269) 45
TRUE (270) 77
FALSE (271) 78
NIL (272) 76
ASSIGN (273) 38
PLUS (274) 17
MINUS (275) 18 31
MULT (276) 19
DIV (277) 20
MOD (278) 21
EQUAL (279) 26
NOT_EQUAL (280) 27
PLUS_PLUS (281) 33 34
MINUS_MINUS (282) 35 36
GREATER (283) 22
LESS (284) 24
GREATER_EQUAL (285) 23
LESS_EQUAL (286) 25
REALCONST (287) 73
INTCONST (288) 74
STRING (289) 75
LEFT_BRACE (290) 68 69 70
RIGHT_BRACE (291) 68 69 70
LEFT_BRACKET (292) 49 51 62 63 64
RIGHT_BRACKET (293) 49 51 62 63 64
LEFT_PARENTHESIS (294) 30 42 52 54 57 58 71 72 83 84 85 86
RIGHT_PARENTHESIS (295) 30 42 52 54 57 58 71 72 83 84 85 86
SEMICOLON (296) 4 9 10 13 86 87 88
COMA (297) 61 67 81
COLON (298) 68
DOUBLE_COLON (299) 46
DOT (300) 48 50
DOUBLE_DOT (301) 58
ID (302) 44 45 46 48 50 58 71 80 81
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
stmts (51)
    on left: 2 3, on right: 1 3 69
stmt (52)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 3 83 84 85 86
expr (53)
    on left: 14 15 16, on right: 4 15 30 31 32 38 49 51 59 61 68 83
    84 85 86 87
op (54)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 15
term (55)
    on left: 30 31 32 33 34 35 36 37, on right: 16
assignexpr (56)
    on left: 38, on right: 14
primary (57)
    on left: 39 40 41 42 43, on right: 37
lvalue (58)
    on left: 44 45 46 47, on right: 33 34 35 36 38 39 48 49 53
member (59)
    on left: 48 49 50 51, on right: 47
call (60)
    on left: 52 53 54, on right: 40 50 51 52
callsuffix (61)
    on left: 55 56, on right: 53
normcall (62)
    on left: 57, on right: 55
methodcall (63)
    on left: 58, on right: 56
elist (64)
    on left: 59, on right: 52 54 57 58 62 86
comaexpr (65)
    on left: 60 61, on right: 59 61
objectdef (66)
    on left: 62 63 64, on right: 41
indexed (67)
    on left: 65, on right: 63
comaindexedelem (68)
    on left: 66 67, on right: 65 67
indexedelem (69)
    on left: 68, on right: 65 67
block (70)
    on left: 69 70, on right: 11 71 72
funcdef (71)
    on left: 71 72, on right: 12 42 54
const (72)
    on left: 73 74 75 76 77 78, on right: 43
idlist (73)
    on left: 79 80, on right: 71 72
comaid (74)
    on left: 81 82, on right: 80 81
ifstmt (75)
    on left: 83 84, on right: 5
whilestmt (76)
    on left: 85, on right: 6
forstmt (77)
    on left: 86, on right: 7
returnstmt (78)
    on left: 87 88, on right: 8


State 0

    0 $accept: . program $end

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    $default  reduce using rule 2 (stmts)

    program     go to state 25
    stmts       go to state 26
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 1

   83 ifstmt: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt
   84       | IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 43


State 2

   85 whilestmt: WHILE . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 44


State 3

   86 forstmt: FOR . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 45


State 4

   71 funcdef: FUNCTION . ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   72        | FUNCTION . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 46
    ID                shift, and go to state 47


State 5

   87 returnstmt: RETURN . expr SEMICOLON
   88           | RETURN . SEMICOLON

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 48
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 6

    9 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 7

   10 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 8

   32 term: NOT . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 52
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 9

   45 lvalue: LOCAL . ID

    ID  shift, and go to state 53


State 10

   77 const: TRUE .

    $default  reduce using rule 77 (const)


State 11

   78 const: FALSE .

    $default  reduce using rule 78 (const)


State 12

   76 const: NIL .

    $default  reduce using rule 76 (const)


State 13

   31 term: MINUS . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 14

   33 term: PLUS_PLUS . lvalue

    LOCAL             shift, and go to state 9
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 15

   35 term: MINUS_MINUS . lvalue

    LOCAL             shift, and go to state 9
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 16

   73 const: REALCONST .

    $default  reduce using rule 73 (const)


State 17

   74 const: INTCONST .

    $default  reduce using rule 74 (const)


State 18

   75 const: STRING .

    $default  reduce using rule 75 (const)


State 19

   69 block: LEFT_BRACE . stmts RIGHT_BRACE
   70      | LEFT_BRACE . RIGHT_BRACE

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    RIGHT_BRACE       shift, and go to state 59
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    RIGHT_BRACE  [reduce using rule 2 (stmts)]

    stmts       go to state 60
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 20

   62 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   63          | LEFT_BRACKET . indexed RIGHT_BRACKET
   64          | LEFT_BRACKET . RIGHT_BRACKET

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 61
    LEFT_BRACKET      shift, and go to state 20
    RIGHT_BRACKET     shift, and go to state 62
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr         go to state 63
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 64
    objectdef    go to state 35
    indexed      go to state 65
    indexedelem  go to state 66
    const        go to state 38


State 21

   30 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   42 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 4
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 67
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 68
    const       go to state 38


State 22

   13 stmt: SEMICOLON .

    $default  reduce using rule 13 (stmt)


State 23

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 69


State 24

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 25

    0 $accept: program . $end

    $end  shift, and go to state 70


State 26

    1 program: stmts .

    $default  reduce using rule 1 (program)


State 27

    3 stmts: stmt . stmts

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    $default  reduce using rule 2 (stmts)

    stmts       go to state 71
    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 28

    4 stmt: expr . SEMICOLON
   15 expr: expr . op expr

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 85

    op  go to state 86


State 29

   16 expr: term .

    $default  reduce using rule 16 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   37 term: primary .

    $default  reduce using rule 37 (term)


State 32

   34 term: lvalue . PLUS_PLUS
   36     | lvalue . MINUS_MINUS
   38 assignexpr: lvalue . ASSIGN expr
   39 primary: lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   53 call: lvalue . callsuffix

    ASSIGN            shift, and go to state 87
    PLUS_PLUS         shift, and go to state 88
    MINUS_MINUS       shift, and go to state 89
    LEFT_BRACKET      shift, and go to state 90
    LEFT_PARENTHESIS  shift, and go to state 91
    DOT               shift, and go to state 92
    DOUBLE_DOT        shift, and go to state 93

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 33

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 34

   40 primary: call .
   50 member: call . DOT ID
   51       | call . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 97
    LEFT_PARENTHESIS  shift, and go to state 98
    DOT               shift, and go to state 99

    $default  reduce using rule 40 (primary)


State 35

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 36

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 37

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 38

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 39

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 42

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 43

   83 ifstmt: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE stmt
   84       | IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 100
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   85 whilestmt: WHILE LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 101
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 45

   86 forstmt: FOR LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 102
    objectdef   go to state 35
    const       go to state 38


State 46

   72 funcdef: FUNCTION LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 103

    $default  reduce using rule 79 (idlist)

    idlist  go to state 104


State 47

   71 funcdef: FUNCTION ID . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 105


State 48

   88 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 88 (returnstmt)


State 49

   15 expr: expr . op expr
   87 returnstmt: RETURN expr . SEMICOLON

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 106

    op  go to state 86


State 50

    9 stmt: BREAK SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 51

   10 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 52

   15 expr: expr . op expr
   32 term: NOT expr .

    $default  reduce using rule 32 (term)

    op  go to state 86


State 53

   45 lvalue: LOCAL ID .

    $default  reduce using rule 45 (lvalue)


State 54

   15 expr: expr . op expr
   31 term: MINUS expr .

    MULT  shift, and go to state 76
    DIV   shift, and go to state 77
    MOD   shift, and go to state 78

    $default  reduce using rule 31 (term)

    op  go to state 86


State 55

   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 4

    funcdef  go to state 107


State 56

   33 term: PLUS_PLUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   53 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 90
    LEFT_PARENTHESIS  shift, and go to state 91
    DOT               shift, and go to state 92
    DOUBLE_DOT        shift, and go to state 93

    $default  reduce using rule 33 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 57

   50 member: call . DOT ID
   51       | call . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_BRACKET      shift, and go to state 97
    LEFT_PARENTHESIS  shift, and go to state 98
    DOT               shift, and go to state 99


State 58

   35 term: MINUS_MINUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   53 call: lvalue . callsuffix

    LEFT_BRACKET      shift, and go to state 90
    LEFT_PARENTHESIS  shift, and go to state 91
    DOT               shift, and go to state 92
    DOUBLE_DOT        shift, and go to state 93

    $default  reduce using rule 35 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 59

   70 block: LEFT_BRACE RIGHT_BRACE .

    $default  reduce using rule 70 (block)


State 60

   69 block: LEFT_BRACE stmts . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 108


State 61

   68 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 109
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 62

   64 objectdef: LEFT_BRACKET RIGHT_BRACKET .

    $default  reduce using rule 64 (objectdef)


State 63

   15 expr: expr . op expr
   59 elist: expr . comaexpr

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMA           shift, and go to state 110

    $default  reduce using rule 60 (comaexpr)

    op        go to state 86
    comaexpr  go to state 111


State 64

   62 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 112


State 65

   63 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 113


State 66

   65 indexed: indexedelem . comaindexedelem

    COMA  shift, and go to state 114

    $default  reduce using rule 66 (comaindexedelem)

    comaindexedelem  go to state 115


State 67

   15 expr: expr . op expr
   30 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS               shift, and go to state 74
    MINUS              shift, and go to state 75
    MULT               shift, and go to state 76
    DIV                shift, and go to state 77
    MOD                shift, and go to state 78
    EQUAL              shift, and go to state 79
    NOT_EQUAL          shift, and go to state 80
    GREATER            shift, and go to state 81
    LESS               shift, and go to state 82
    GREATER_EQUAL      shift, and go to state 83
    LESS_EQUAL         shift, and go to state 84
    RIGHT_PARENTHESIS  shift, and go to state 116

    op  go to state 86


State 68

   42 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 117


State 69

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 70

    0 $accept: program $end .

    $default  accept


State 71

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


State 72

   28 op: AND .

    $default  reduce using rule 28 (op)


State 73

   29 op: OR .

    $default  reduce using rule 29 (op)


State 74

   17 op: PLUS .

    $default  reduce using rule 17 (op)


State 75

   18 op: MINUS .

    $default  reduce using rule 18 (op)


State 76

   19 op: MULT .

    $default  reduce using rule 19 (op)


State 77

   20 op: DIV .

    $default  reduce using rule 20 (op)


State 78

   21 op: MOD .

    $default  reduce using rule 21 (op)


State 79

   26 op: EQUAL .

    $default  reduce using rule 26 (op)


State 80

   27 op: NOT_EQUAL .

    $default  reduce using rule 27 (op)


State 81

   22 op: GREATER .

    $default  reduce using rule 22 (op)


State 82

   24 op: LESS .

    $default  reduce using rule 24 (op)


State 83

   23 op: GREATER_EQUAL .

    $default  reduce using rule 23 (op)


State 84

   25 op: LESS_EQUAL .

    $default  reduce using rule 25 (op)


State 85

    4 stmt: expr SEMICOLON .

    $default  reduce using rule 4 (stmt)


State 86

   15 expr: expr op . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 87

   38 assignexpr: lvalue ASSIGN . expr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 88

   34 term: lvalue PLUS_PLUS .

    $default  reduce using rule 34 (term)


State 89

   36 term: lvalue MINUS_MINUS .

    $default  reduce using rule 36 (term)


State 90

   49 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 91

   57 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 121
    objectdef   go to state 35
    const       go to state 38


State 92

   48 member: lvalue DOT . ID

    ID  shift, and go to state 122


State 93

   58 methodcall: DOUBLE_DOT . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 123


State 94

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 95

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 96

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 97

   51 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 98

   52 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 125
    objectdef   go to state 35
    const       go to state 38


State 99

   50 member: call DOT . ID

    ID  shift, and go to state 126


State 100

   15 expr: expr . op expr
   83 ifstmt: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE stmt
   84       | IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS               shift, and go to state 74
    MINUS              shift, and go to state 75
    MULT               shift, and go to state 76
    DIV                shift, and go to state 77
    MOD                shift, and go to state 78
    EQUAL              shift, and go to state 79
    NOT_EQUAL          shift, and go to state 80
    GREATER            shift, and go to state 81
    LESS               shift, and go to state 82
    GREATER_EQUAL      shift, and go to state 83
    LESS_EQUAL         shift, and go to state 84
    RIGHT_PARENTHESIS  shift, and go to state 127

    op  go to state 86


State 101

   15 expr: expr . op expr
   85 whilestmt: WHILE LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND                shift, and go to state 72
    OR                 shift, and go to state 73
    PLUS               shift, and go to state 74
    MINUS              shift, and go to state 75
    MULT               shift, and go to state 76
    DIV                shift, and go to state 77
    MOD                shift, and go to state 78
    EQUAL              shift, and go to state 79
    NOT_EQUAL          shift, and go to state 80
    GREATER            shift, and go to state 81
    LESS               shift, and go to state 82
    GREATER_EQUAL      shift, and go to state 83
    LESS_EQUAL         shift, and go to state 84
    RIGHT_PARENTHESIS  shift, and go to state 128

    op  go to state 86


State 102

   86 forstmt: FOR LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 129


State 103

   80 idlist: ID . comaid

    COMA  shift, and go to state 130

    $default  reduce using rule 82 (comaid)

    comaid  go to state 131


State 104

   72 funcdef: FUNCTION LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 132


State 105

   71 funcdef: FUNCTION ID LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 103

    $default  reduce using rule 79 (idlist)

    idlist  go to state 133


State 106

   87 returnstmt: RETURN expr SEMICOLON .

    $default  reduce using rule 87 (returnstmt)


State 107

   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 134


State 108

   69 block: LEFT_BRACE stmts RIGHT_BRACE .

    $default  reduce using rule 69 (block)


State 109

   15 expr: expr . op expr
   68 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COLON          shift, and go to state 135

    op  go to state 86


State 110

   61 comaexpr: COMA . expr comaexpr

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 136
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 111

   59 elist: expr comaexpr .

    $default  reduce using rule 59 (elist)


State 112

   62 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 62 (objectdef)


State 113

   63 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 63 (objectdef)


State 114

   67 comaindexedelem: COMA . indexedelem comaindexedelem

    LEFT_BRACE  shift, and go to state 61

    indexedelem  go to state 137


State 115

   65 indexed: indexedelem comaindexedelem .

    $default  reduce using rule 65 (indexed)


State 116

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 30 (term)


State 117

   42 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 138

    $default  reduce using rule 42 (primary)


State 118

   15 expr: expr . op expr
   15     | expr op expr .

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    AND            [reduce using rule 15 (expr)]
    OR             [reduce using rule 15 (expr)]
    PLUS           [reduce using rule 15 (expr)]
    MINUS          [reduce using rule 15 (expr)]
    MULT           [reduce using rule 15 (expr)]
    DIV            [reduce using rule 15 (expr)]
    MOD            [reduce using rule 15 (expr)]
    EQUAL          [reduce using rule 15 (expr)]
    NOT_EQUAL      [reduce using rule 15 (expr)]
    GREATER        [reduce using rule 15 (expr)]
    LESS           [reduce using rule 15 (expr)]
    GREATER_EQUAL  [reduce using rule 15 (expr)]
    LESS_EQUAL     [reduce using rule 15 (expr)]
    $default       reduce using rule 15 (expr)

    op  go to state 86


State 119

   15 expr: expr . op expr
   38 assignexpr: lvalue ASSIGN expr .

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84

    $default  reduce using rule 38 (assignexpr)

    op  go to state 86


State 120

   15 expr: expr . op expr
   49 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    RIGHT_BRACKET  shift, and go to state 139

    op  go to state 86


State 121

   57 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 140


State 122

   48 member: lvalue DOT ID .

    $default  reduce using rule 48 (member)


State 123

   58 methodcall: DOUBLE_DOT ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 141


State 124

   15 expr: expr . op expr
   51 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    RIGHT_BRACKET  shift, and go to state 142

    op  go to state 86


State 125

   52 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 126

   50 member: call DOT ID .

    $default  reduce using rule 50 (member)


State 127

   83 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE stmt
   84       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    stmt        go to state 144
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 128

   85 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    stmt        go to state 145
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 129

   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 146
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 130

   81 comaid: COMA . ID comaid

    ID  shift, and go to state 147


State 131

   80 idlist: ID comaid .

    $default  reduce using rule 80 (idlist)


State 132

   72 funcdef: FUNCTION LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACE  shift, and go to state 19

    block  go to state 148


State 133

   71 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 149


State 134

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 138


State 135

   68 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 150
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 136

   15 expr: expr . op expr
   61 comaexpr: COMA expr . comaexpr

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    COMA           shift, and go to state 110

    $default  reduce using rule 60 (comaexpr)

    op        go to state 86
    comaexpr  go to state 151


State 137

   67 comaindexedelem: COMA indexedelem . comaindexedelem

    COMA  shift, and go to state 114

    $default  reduce using rule 66 (comaindexedelem)

    comaindexedelem  go to state 152


State 138

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 153
    objectdef   go to state 35
    const       go to state 38


State 139

   49 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 49 (member)


State 140

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (normcall)


State 141

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 154
    objectdef   go to state 35
    const       go to state 38


State 142

   51 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 51 (member)


State 143

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 144

   83 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE stmt
   84       | IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    ELSE  shift, and go to state 155

    ELSE      [reduce using rule 84 (ifstmt)]
    $default  reduce using rule 84 (ifstmt)


State 145

   85 whilestmt: WHILE LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 85 (whilestmt)


State 146

   15 expr: expr . op expr
   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    SEMICOLON      shift, and go to state 156

    op  go to state 86


State 147

   81 comaid: COMA ID . comaid

    COMA  shift, and go to state 130

    $default  reduce using rule 82 (comaid)

    comaid  go to state 157


State 148

   72 funcdef: FUNCTION LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 72 (funcdef)


State 149

   71 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_BRACE  shift, and go to state 19

    block  go to state 158


State 150

   15 expr: expr . op expr
   68 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    AND            shift, and go to state 72
    OR             shift, and go to state 73
    PLUS           shift, and go to state 74
    MINUS          shift, and go to state 75
    MULT           shift, and go to state 76
    DIV            shift, and go to state 77
    MOD            shift, and go to state 78
    EQUAL          shift, and go to state 79
    NOT_EQUAL      shift, and go to state 80
    GREATER        shift, and go to state 81
    LESS           shift, and go to state 82
    GREATER_EQUAL  shift, and go to state 83
    LESS_EQUAL     shift, and go to state 84
    RIGHT_BRACE    shift, and go to state 159

    op  go to state 86


State 151

   61 comaexpr: COMA expr comaexpr .

    $default  reduce using rule 61 (comaexpr)


State 152

   67 comaindexedelem: COMA indexedelem comaindexedelem .

    $default  reduce using rule 67 (comaindexedelem)


State 153

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 160


State 154

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 161


State 155

   83 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    stmt        go to state 162
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 156

   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    expr        go to state 63
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 163
    objectdef   go to state 35
    const       go to state 38


State 157

   81 comaid: COMA ID comaid .

    $default  reduce using rule 81 (comaid)


State 158

   71 funcdef: FUNCTION ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 71 (funcdef)


State 159

   68 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 68 (indexedelem)


State 160

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (call)


State 161

   58 methodcall: DOUBLE_DOT ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (methodcall)


State 162

   83 ifstmt: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE stmt .

    $default  reduce using rule 83 (ifstmt)


State 163

   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 164


State 164

   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    IF                shift, and go to state 1
    WHILE             shift, and go to state 2
    FOR               shift, and go to state 3
    FUNCTION          shift, and go to state 4
    RETURN            shift, and go to state 5
    BREAK             shift, and go to state 6
    CONTINUE          shift, and go to state 7
    NOT               shift, and go to state 8
    LOCAL             shift, and go to state 9
    TRUE              shift, and go to state 10
    FALSE             shift, and go to state 11
    NIL               shift, and go to state 12
    MINUS             shift, and go to state 13
    PLUS_PLUS         shift, and go to state 14
    MINUS_MINUS       shift, and go to state 15
    REALCONST         shift, and go to state 16
    INTCONST          shift, and go to state 17
    STRING            shift, and go to state 18
    LEFT_BRACE        shift, and go to state 19
    LEFT_BRACKET      shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 21
    SEMICOLON         shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 23
    ID                shift, and go to state 24

    stmt        go to state 165
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 165

   86 forstmt: FOR LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 86 (forstmt)
